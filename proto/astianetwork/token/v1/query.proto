syntax = "proto3";

package astianetwork.token.v1;

import "amino/amino.proto";
import "astianetwork/token/v1/params.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "astianetwork/token/v1/coin.proto";

option go_package = "astianetwork/x/token/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/astianetwork/token/v1/params";
  
  }
  
  // ListCoin Queries a list of Coin items.
  rpc GetCoin (QueryGetCoinRequest) returns (QueryGetCoinResponse) {
    option (google.api.http).get = "/astianetwork/token/v1/coin/{id}";
  
  }
  
  // ListCoin defines the ListCoin RPC.
  rpc ListCoin (QueryAllCoinRequest) returns (QueryAllCoinResponse) {
    option (google.api.http).get = "/astianetwork/token/v1/coin";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// QueryGetCoinRequest defines the QueryGetCoinRequest message.
message QueryGetCoinRequest {
  uint64 id = 1;
}

// QueryGetCoinResponse defines the QueryGetCoinResponse message.
message QueryGetCoinResponse {
  Coin coin = 1 [(gogoproto.nullable) = false];
}

// QueryAllCoinRequest defines the QueryAllCoinRequest message.
message QueryAllCoinRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllCoinResponse defines the QueryAllCoinResponse message.
message QueryAllCoinResponse {
  repeated Coin                                   coin       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

